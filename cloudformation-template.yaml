# AWS Serverless Contact Form - CloudFormation Template

AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Configuration"
        Parameters:
          - ToEmailAddress
          - ContactUsEmailTemplate
  Parameters:
    ToEmailAddress:
      Type: String
      Description: Email address you want contact form submittions to go to
    ContactUsEmailTemplate:
      Type: String
      Description: Name of the SES email tamplate
      Default: 'contact-us-email-template'
Description: 'Serverless contact form on the AWS Cloud.'
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: maximdomentii.com
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
            Principal: '*'

  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::319977881563:policy/service-role/AWSLambdaBasicExecutionRole-aeabd6f2-086b-42ec-84af-6b54e6efe8a8"
      Path: /
      Policies:
        - PolicyName: lambda
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - "lambda:InvokeFunction"
              Resource: "*"
        - PolicyName: sendEmails
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - "ses:SendEmail"
                - "ses:SendTemplatedEmail"
                - "ses:SendRawEmail"
              Resource: "*"
  SesTemplate:
    Type: 'AWS::SES::Template'
    Properties:
      Template:
        TemplateName: !Ref ContactUsEmailTemplate
        SubjectPart: 'maximdomentii.com contact us from {{name}}'
        TextPart: '<h1>New message from {{name}}</h1><br/><p>{{text}}</p><br/><p>Contact details</p><p>Phone: {{phone}}</p><p>Email: {{email}}<p>'
        HtmlPart: 'New message from {{name}}\n\n\n{{text}}\n\nContact details\nPhone: {{phone}}\nEmail: {{email}}'

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: mailfwd
      Runtime: nodejs14.x
      Timeout: 5
      Handler: index.handler
      Role: !GetAtt LambdaFunctionRole.Arn
      CodeUri: ./index.js
      Environment:
        Variables:
          ToEmailAddress: !Ref ToEmailAddress
          AwsRegion: !Ref 'AWS::Region'
          ContactUsEmailTemplate: !Ref ContactUsEmailTemplate

  lambdaApiGatewayInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join [
          "", [
            "arn:aws:execute-api:",
            { "Ref": "AWS::Region" }, ":",
            { "Ref": "AWS::AccountId" }, ":",
            !Ref ApiGatewayRestApi, "/*/*"
        ]
      ]

  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: !Ref LambdaFunction
      ApiKeySourceType: "HEADER"
      EndpointConfiguration:
        Types:
          - "REGIONAL"

  ApiGatewayResource:
    Type: 'AWS::ApiGateway::Resource'
    DependsOn: ApiGatewayRestApi
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt
        - ApiGatewayRestApi
        - RootResourceId
      PathPart: contact-us

  ApiGatewayMethod2:
    Type: "AWS::ApiGateway::Method"
    DependsOn: ApiGatewayResource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: "POST"
      AuthorizationType: "NONE"
      ApiKeyRequired: false
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt LambdaFunction.Arn
        IntegrationResponses:
          - StatusCode: "200"
      MethodResponses:
        - ResponseModels:
            "application/json": "Empty"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Headers": false
            "method.response.header.Access-Control-Allow-Methods": false
            "method.response.header.Access-Control-Allow-Origin": false
          StatusCode: "200"

  ApiGatewayMethod:
    Type: "AWS::ApiGateway::Method"
    DependsOn: ApiGatewayMethod2
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: "OPTIONS"
      AuthorizationType: "NONE"
      ApiKeyRequired: false
      RequestParameters: { }
      MethodResponses:
        - ResponseModels:
            "application/json": "Empty"
          ResponseParameters:
            "method.response.header.Access-Control-Allow-Headers": false
            "method.response.header.Access-Control-Allow-Methods": false
            "method.response.header.Access-Control-Allow-Origin": false
          StatusCode: "200"
      Integration:
        CacheNamespace: !Ref ApiGatewayResource
        IntegrationResponses:
          - ResponseParameters:
              "method.response.header.Access-Control-Allow-Headers": "'*'"
              "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            ResponseTemplates: { }
            SelectionPattern: ""
            StatusCode: "200"
        PassthroughBehavior: "WHEN_NO_MATCH"
        RequestTemplates:
          "application/json": "{\"statusCode\": 200}"
        TimeoutInMillis: 29000
        Type: "MOCK"

  ApiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn: ApiGatewayMethod
    Properties:
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayStage:
    Type: "AWS::ApiGateway::Stage"
    DependsOn: ApiGatewayDeployment
    Properties:
      StageName: "v1"
      DeploymentId: !Ref ApiGatewayDeployment
      RestApiId: !Ref ApiGatewayRestApi
Outputs:
  S3BucketName:
    Value: !Ref S3Bucket
    Description: Name of the S3 bucket.

  WebsiteURL:
    Value: !GetAtt
      - S3Bucket
      - WebsiteURL
    Description: Website URL of the S3 bucket hosting the contact form.

  APIGatewayURL:
    Value: !Sub 'https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiGatewayStage}/contact-us'
    Description: URL of the REST API.

  LambdaName:
    Value: !Ref LambdaFunction
    Description: Name of the Lambda function.

  TemplateName:
    Value: !Ref SesTemplate
    Description: Name of the SES template.